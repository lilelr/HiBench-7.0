hibench.spark.home      /home/lemaker/open-source/spark-2.3.0-bin-hadoop2.7
hibench.spark.master    spark://Veriton:7077
# Spark home
hibench.spark.home      /home/lemaker/open-source/spark-2.3.0-bin-hadoop2.7

# Spark master
#   standalone mode: spark://xxx:7077
#   YARN mode: yarn-client
#
# hibench.spark.master    mesos://172.20.110.76:5050

# Chameleon master address 2019-3-15
# hibench.spark.master    mesos://172.20.110.173:6060
# Chameleon super_master address port is 7000
# hibench.spark.master    mesos://172.20.110.76:7000

# executor number and cores when running on Yarn
hibench.yarn.executor.num     1
hibench.yarn.executor.cores   1

# executor and driver memory in standalone & YARN mode
# SPARK_EXECUTOR_CORES   2
# export SPARK_EXECUTOR_INSTANCES=1
# spark.num.executors    2
# spark.executor.cores   2

spark.executor.cores   1
spark.executor.memory  600m
spark.driver.memory    2g

# lilele
spark.cores.max        2

# set spark parallelism property according to hibench's parallelism value
spark.default.parallelism     ${hibench.default.map.parallelism}

# spark.default.parallelism     1

# set spark sql's default shuffle partitions according to hibench's parallelism value
spark.sql.shuffle.partitions  ${hibench.default.shuffle.parallelism}

#======================================================
# Spark Streaming
#======================================================
# Spark streaming Batchnterval in millisecond (default 100)
hibench.streambench.spark.batchInterval          100

# Number of nodes that will receive kafka input (default: 4)
hibench.streambench.spark.receiverNumber        4

# Indicate RDD storage level. (default: 2)
# 0 = StorageLevel.MEMORY_ONLY
# 1 = StorageLevel.MEMORY_AND_DISK_SER
# other = StorageLevel.MEMORY_AND_DISK_SER_2
hibench.streambench.spark.storageLevel 2

# indicate whether to test the write ahead log new feature (default: false)
hibench.streambench.spark.enableWAL false

# if testWAL is true, this path to store stream context in hdfs shall be specified. If false, it can be empty (default: /var/tmp)
hibench.streambench.spark.checkpointPath /var/tmp

# whether to use direct approach or not (dafault: true)
hibench.streambench.spark.useDirectMode true
